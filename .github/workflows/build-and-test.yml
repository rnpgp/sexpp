#
# Copyright (c) 2022 [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of sexp
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

name: build-and-test

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  MAKEFLAGS: j4

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}-${{ matrix.env.CC }} shared lib ${{ matrix.shared }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, macos-11, windows-2019 ]
        env: [ { } ]
        shared: [on, off]
        # on macos gcc is an alias to clang by default, so there is no real value in macos clang run
        include:
          - { os: ubuntu-20.04, env: { CC: clang, CXX: clang++ }, shared: on }
          - { os: ubuntu-20.04, env: { CC: clang, CXX: clang++ }, shared: off }
    env: ${{ matrix.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Configure
        run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIB=${{ matrix.shared }}

      - name: Adjust environment for Windows build
        if: runner.os == 'Windows'
        shell: bash
        run: echo "OSTYPE=windows" >> $GITHUB_ENV

      - name: Build
        run: cmake --build build --config Release

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

      - name: Checkout shell test framework
        uses: actions/checkout@v3
        with:
          repository: kward/shunit2
          path: ${{github.workspace}}/tests/shunit2
          fetch-depth: 1

      - name: Install
        run: cmake --install build

      - name: Run additional tests
        shell: bash
        run: tests/scripts/tests.sh

  offline-gtest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install googletest
        run: |
          sudo apt-get -y install googletest
          sudo cmake -B/usr/src/googletest/build /usr/src/googletest
          sudo cmake --build /usr/src/googletest/build
          sudo cmake --install /usr/src/googletest/build

      - name: Configure
        run: |
          cmake -Bbuild                                                   \
                -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install    \
                -DCMAKE_BUILD_TYPE=Release                                \
                -DDOWNLOAD_GTEST=OFF

      - name: Build
        run: cmake --build build

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

  sanitizers:
    runs-on: ubuntu-latest
    env:
      CC: clang
      CXX: clang++
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Configure
        run: |
          cmake -Bbuild                                                   \
                -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install    \
                -DWITH_SANITIZERS=ON

      - name: Build
        run: cmake --build build

      - name: Run tests
        run: ctest --test-dir build --output-on-failure
